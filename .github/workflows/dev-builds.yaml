name: Dev Build

on:
  workflow_dispatch:
  push:
    tags:
      - "!v*"
    branches:
      - master
      - staging
      - develop
      - ci/*
      - v*
      - 1.[0-9]+.x
  pull_request:
    branches:
      - master
      - develop
      - staging
      - ci/*
      - v*
      - 1.[0-9]+.x
jobs:

  linux:
  # We use a matrix since it's easier to migrate upwards, add new
  # test on multiple, then remove old without creating friction.
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04]
    env:
      BUILD_VERSION: latest # Computed

    steps:
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: Build and package
      run: TARGETS="x86_64-pc-linux-gnu" ./make.sh docker-release-git

    - name: Publish artifact - x86_64-pc-linux-gnu
      uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz
        
    # Linux build additionally pushes the docker images to docker hub on successful build
    - name: Tag dockerhub build
      if: ${{ github.repository == 'DeFiCh/ain' }}
      run: >
        docker tag defichain-x86_64-pc-linux-gnu:${{ env.BUILD_VERSION }}
        defichain-x86_64-pc-linux-gnu:dockerhub-latest
    - uses: docker/build-push-action@3e7a4f6646880c6f63758d73ac32392d323eaf8f
    # Make sure to only build on ain repo. Also add in additional restrictions here if needed to
    # make sure we don't push unnecessary images to docker
      if: ${{ github.repository == 'DeFiCh/ain' }}
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        path: ./contrib/dockerfiles/dockerhub
        dockerfile: ./contrib/dockerfiles/dockerhub/x86_64-pc-linux-gnu.dockerfile
        repository: defi/defichain
        tags: ${{ env.BUILD_VERSION }}

  windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    env:
      BUILD_VERSION: latest # Computed

    steps:
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: Build and package
      run: TARGETS="x86_64-w64-mingw32" ./make.sh docker-release-git

    - name: Publish artifact - x86_64-w64-mingw32
      uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.tar.gz

  macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    env:
      BUILD_VERSION: latest # Computed

    steps:
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: Build and package
      run: TARGETS="x86_64-apple-darwin11" ./make.sh docker-release-git

    - name: Publish artifact - x86_64-apple-darwin11
      uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11.tar.gz
