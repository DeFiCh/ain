name: Dev Build

on:
  workflow_dispatch:
  push:
    tags:
      - "!v*"
    branches:
      - master
      - staging
      - develop
      - ci/*
      - v*
      - 1.[0-9]+.x
  pull_request:
    branches:
      - master
      - develop
      - staging
      - ci/*
      - v*
      - 1.[0-9]+.x
jobs:
  docker:
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          driver: docker

      - name: Build image
        run: ./make.sh docker-release-git

      - name: Tag image
        run: docker tag defichain-x86_64-pc-linux-gnu:${{ env.BUILD_VERSION }} defichain-x86_64-pc-linux-gnu:dockerhub-latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./contrib/dockerfiles/dockerhub/x86_64-pc-linux-gnu.dockerfile
          tags: |
            ghcr.io/defich/ain:${{github.sha}}

  linux:
  # We use a matrix since it's easier to migrate upwards, add new
  # test on multiple, then remove old without creating friction.
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04]
    env:
      BUILD_VERSION: latest # Computed

    steps:
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: Build and package
      run: TARGETS="x86_64-pc-linux-gnu" ./make.sh docker-release-git

    - name: Publish artifact - x86_64-pc-linux-gnu
      uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz

  windows:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    env:
      BUILD_VERSION: latest # Computed

    steps:
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: Build and package
      run: TARGETS="x86_64-w64-mingw32" ./make.sh docker-release-git

    - name: Publish artifact - x86_64-w64-mingw32
      uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.tar.gz

  macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04]
    env:
      BUILD_VERSION: latest # Computed

    steps:
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: Build and package
      run: TARGETS="x86_64-apple-darwin11" ./make.sh docker-release-git

    - name: Publish artifact - x86_64-apple-darwin11
      uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11.tar.gz
