name: Jellyfish Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
        with:
          repository: DeFiCh/jellyfish
          ref: 'monstrobishi/specify-image'

      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
        with:
          path: defichain

      - uses: actions/setup-node@46071b5c7a2e0c34e49c3cb8a0e792e86e18d5ea
        with:
          node-version: '15'

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
          
      - name: Build and package
        run: |
          echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
          echo $GITHUB_SHA_SHORT
          cd defichain
          TARGETS="x86_64-pc-linux-gnu" ./make.sh git_version
          echo ">>> BUILD VERSION <<<"
          echo $BUILD_VERSION
          # TARGETS="x86_64-pc-linux-gnu" ./make.sh docker-release-git
          # echo $BUILD_VERSION
          # docker tag defichain-x86_64-pc-linux-gnu:$BUILD_VERSION defichain-x86_64-pc-linux-gnu:dockerhub-latest
          # docker build -t $BUILD_VERSION -f ./contrib/dockerfiles/dockerhub/x86_64-pc-linux-gnu.dockerfile .         
          # npm ci
          # npm run build
          # DEFICHAIN_DOCKER_IMAGE=${BUILD_VERSION} npm run test:ci
