name: Release Build

on:
  release:
    types: [published]

jobs:

  linux:
    runs-on: ubuntu-18.04
    env:
      BUILD_VERSION: latest # Computed
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: Build and package
      run: ./make.sh docker-release-git

    - name: Publish artifacts
      uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz

    # Linux build additionally pushes the docker images to docker hub on successful build
    - name: Tag dockerhub build
      if: ${{ github.repository == 'DeFiCh/ain' }}
      run: >
        docker tag defichain-x86_64-pc-linux-gnu:${{ env.BUILD_VERSION }}
        defichain-x86_64-pc-linux-gnu:dockerhub-latest

    - uses: docker/build-push-action@3e7a4f6646880c6f63758d73ac32392d323eaf8f
    # Make sure to only build on ain repo. Also add in additional restrictions here if needed to
    # make sure we don't push unnecessary images to docker
      if: ${{ github.repository == 'DeFiCh/ain' }}
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        path: ./contrib/dockerfiles/dockerhub
        dockerfile: ./contrib/dockerfiles/dockerhub/x86_64-pc-linux-gnu.dockerfile
        repository: defi/defichain
        tags: latest,${{ env.BUILD_VERSION }}

  windows:
    runs-on: ubuntu-18.04
    env:
      BUILD_VERSION: latest # Computed
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: Build and package
      run: TARGETS="x86_64-w64-mingw32" ./make.sh docker-release-git

    - name: Publish artifact - x86_64-w64-mingw32
      uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.tar.gz

  macos:
    runs-on: ubuntu-18.04
    env:
      BUILD_VERSION: latest # Computed
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: Build and package
      run: TARGETS="x86_64-apple-darwin11" ./make.sh docker-release-git

    - name: Publish artifact - x86_64-apple-darwin11
      uses: actions/upload-artifact@e448a9b857ee2131e752b06002bf0e093c65e571
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11.tar.gz

  create-release:
    needs:
      - linux
      - windows
      - macos
    runs-on: ubuntu-18.04
    env:
      BUILD_VERSION: latest # Computed
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f

    - name: compute build version
      run: ./make.sh git-version

    - name: cleanup work dir
      run: rm -rf *

    - name: get all build artifacts
      uses: actions/download-artifact@4a7a711286f30c025902c28b541c10e147a9b843

    - name: zip package for windows
      run: |
        set -e
        cd defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32
        tar xzf defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.tar.gz
        zip -r "defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.zip" \
          defichain-${{ env.BUILD_VERSION }}/

    - name: Get Release by Tag
      id: get_release_by_tag
      uses: jonfriesen/get-release-by-tag@77560d8bbb6096f823ca949d556a1e48c0a60cd0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.BUILD_VERSION }}

    - name: Generate SHA256 checksum
      run: |
        cd ./defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu
        sha256sum ./defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz > ./defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz.SHA256
        cd .. && cd ./defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32
        sha256sum ./defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.zip > ./defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.zip.SHA256
        cd .. && cd ./defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11
        sha256sum ./defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11.tar.gz > ././defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11.tar.gz.SHA256

    - name: Upload release asset - linux
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_by_tag.outputs.upload_url }}
        asset_path: ./defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu/defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz
        asset_name: defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz
        asset_content_type: application/gzip

    - name: Upload checksum - linux
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_by_tag.outputs.upload_url }}
        asset_path: ./defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu/defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz.SHA256
        asset_name: defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz.SHA256
        asset_content_type: text/plain

    - name: Upload release asset - windows
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_by_tag.outputs.upload_url }}
        asset_path: ./defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32/defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.zip
        asset_name: defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.zip
        asset_content_type: application/zip

    - name: Upload checksum asset - windows
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_by_tag.outputs.upload_url }}
        asset_path: ./defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32/defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.zip.SHA256
        asset_name: defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.zip.SHA256
        asset_content_type: text/plain

    - name: Upload release asset - macos
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_by_tag.outputs.upload_url }}
        asset_path: ./defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11/defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11.tar.gz
        asset_name: defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11.tar.gz
        asset_content_type: application/gzip

    - name: Upload checksum asset - macos
      uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_by_tag.outputs.upload_url }}
        asset_path: ./defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11/defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11.tar.gz.SHA256
        asset_name: defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin11.tar.gz.SHA256
        asset_content_type: text/plain
