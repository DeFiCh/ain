name: Tests - Jellyfish Whale Apis

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - feature/ocean-archive # TODO(): remove before merge to master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

env:
  MAKE_DEBUG: 0

jobs:
  build:
    runs-on: ubuntu-latest
    container: defi/ain-builder:latest
    env:
      CARGO_INCREMENTAL: 0

    steps:
    - uses: actions/checkout@v4
    - run: git config --global --add safe.directory '*'

    - name: Populate environment
      run: ./make.sh ci-export-vars

    - name: Setup dependencies
      run: ./make.sh ci-setup-deps

    - name: Setup user dependencies
      run: ./make.sh ci-setup-user-deps

    - uses: Swatinem/rust-cache@v2
      with:
        workspaces: lib -> ../build/lib/target
        save-if: ${{ github.ref == 'refs/heads/master' }}

    - name: Build binaries
      run: ./make.sh build

    - name: Upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: defi-bins
        path: build/src/defid

  docker-build:
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Populate environment
        run: ./make.sh ci-export-vars
      
      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: defi-bins
          path: ./build/

      - name: Build docker
        run: "docker build -t test-build-container -f ./contrib/dockerfiles/x86_64-pc-linux-gnu.dockerfile ."

      - name: Upload docker
        uses: actions/upload-artifact@v3
        with:
          name: defi-docker
          path: .
          
  test:
    name: Jellyfish Whale Api tests
    runs-on: ubuntu-latest
    needs: [build, docker-build]
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          repository: birthdayresearch/jellyfishsdk
          # ref: 'main'
          ref: 'canonbrother/defid-ocean'

      - name: Download binaries
        uses: actions/download-artifact@v3
        with:
          name: defi-bins

      - name: Download docker
        uses: actions/download-artifact@v3
        with:
          name: defi-docker

      - name: Setup permissions
        run: |
          chmod uog+x "$(pwd)/defid"

      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm ci

      - name: Run tests
        run: |
          DEFICHAIN_DOCKER_IMAGE=test-build-container DEFID="$(pwd)/defid" npm t apps/whale-api/src/module.api
