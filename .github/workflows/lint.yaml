name: Lint

on:
  workflow_dispatch:
  push:
    tags:
      - "!v*"
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  TARGET: x86_64-pc-linux-gnu
  MAKE_DEBUG: 0

jobs:
  generic:
    name: Lint
    runs-on: ubuntu-latest
    env:
      BUILD_VERSION: latest # Computed
      GITHUB_PULL_REQUEST: ${{ github.event.number }}
      PYTHON: 3.8
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Lint
      run: ./ci/lint/main.sh

    - name: Extended Lint
      run: ./ci/extended_lint/main.sh

  rust:
    name: Rust Lints
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Populate environment
      run: ./make.sh ci-export-vars

    - name: Setup dependencies
      run: sudo ./make.sh ci-setup-deps

    - name: Setup dependencies for target
      run: ./make.sh ci-setup-deps-target

    - name: Setup dependencies for test
      run: ./make.sh ci-setup-deps-test

    - name: Restore cached depends build
      id: cache-build-deps
      uses: actions/cache/restore@v3
      with:
        path: ./build/depends
        key: ${{ env.TARGET }}-${{ env.BUILD_TYPE }}-depends

    - name: Restore cached rust build
      id: cache-build-rust
      uses: actions/cache/restore@v3
      with:
        path: ./build/lib
        key: ${{ env.TARGET }}-${{ env.BUILD_TYPE }}-rust

    - name: Restore cached cpp build
      id: cache-build-cpp
      uses: actions/cache/restore@v3
      with:
        path: ./build/src
        key: ${{ env.TARGET }}-${{ env.BUILD_TYPE }}-cpp

    - name: Restore cached ccache
      id: cache-ccache
      uses: actions/cache/restore@v3
      with:
        path: ./.ccache
        key: ${{ env.TARGET }}-${{ env.BUILD_TYPE }}-cache

    - name: Build depends and configure
      run: ./make.sh build-deps && ./make.sh build-conf

    - name: Format checks
      run: ./make.sh lib fmt-check

    - name: Clippy checks
      run: ./make.sh lib clippy
