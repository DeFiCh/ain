name: Build - Staging

on:
  workflow_dispatch:

jobs:
  linux-x64:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3

    - name: Populate environment
      run: GIT_VERSION=1 ./make.sh ci-export-vars

    - name: Build and package
      run: GIT_VERSION=1 DOCKERFILE="x86_64-pc-linux-gnu-clang" TARGET="x86_64-pc-linux-gnu" ./make.sh docker-release

    - name: Publish artifacts
      uses: actions/upload-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz
    
  linux-armhf:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3

    - name: Populate environment
      run: GIT_VERSION=1 ./make.sh ci-export-vars

    - name: Build and package
      run: GIT_VERSION=1 TARGET="arm-linux-gnueabihf" ./make.sh docker-release

    - name: Publish artifact - arm-linux-gnueabihf
      uses: actions/upload-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-arm-linux-gnueabihf
        path: ./build/defichain-${{ env.BUILD_VERSION }}-arm-linux-gnueabihf.tar.gz

  linux-aarch64:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3

    - name: Populate environment
      run: GIT_VERSION=1 ./make.sh ci-export-vars
    
    - name: Build and package
      run: GIT_VERSION=1 TARGET="aarch64-linux-gnu" ./make.sh docker-release

    - name: Publish artifact - aarch64-linux-gnu
      uses: actions/upload-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-aarch64-linux-gnu
        path: ./build/defichain-${{ env.BUILD_VERSION }}-aarch64-linux-gnu.tar.gz

  win-x64:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3

    - name: Populate environment
      run: GIT_VERSION=1 ./make.sh ci-export-vars

    - name: Build and package
      run: GIT_VERSION=1 TARGET="x86_64-w64-mingw32" ./make.sh docker-release

    - name: Publish artifact - x86_64-w64-mingw32
      uses: actions/upload-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.tar.gz

  osx-x64:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3

    - name: Populate environment
      run: GIT_VERSION=1 ./make.sh ci-export-vars

    - name: Build and package
      run: GIT_VERSION=1 TARGET="x86_64-apple-darwin" ./make.sh docker-release

    - name: Publish artifact - x86_64-apple-darwin
      uses: actions/upload-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin.tar.gz

  osx-aarch64:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3

    - name: Populate environment
      run: GIT_VERSION=1 ./make.sh ci-export-vars

    - name: Build and package
      run: GIT_VERSION=1 TARGET="aarch64-apple-darwin" ./make.sh docker-release

    - name: Publish artifact - aarch64-apple-darwin
      uses: actions/upload-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-aarch64-apple-darwin
        path: ./build/defichain-${{ env.BUILD_VERSION }}-aarch64-apple-darwin.tar.gz