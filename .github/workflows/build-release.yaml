name: Build - Release

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  BUILD_VERSION: latest # Computed
  DOCKER_HUB_USER: defi
  MAKE_DEBUG: 0
  GIT_VERSION: 1

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        target: [x86_64-pc-linux-gnu, aarch64-linux-gnu, x86_64-w64-mingw32, x86_64-apple-darwin, aarch64-apple-darwin]
    env:
      TARGET: ${{matrix.target}}

    steps:
    - uses: actions/checkout@v3

    - name: Populate environment
      run: ./make.sh ci-export-vars

    - name: Build and package
      run: ./make.sh docker-release

    - name: Sign package
      run: ./make.sh sign

    - name: Publish artifacts
      uses: actions/upload-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-${{ env.TARGET }}
        path: |
          ./build/defichain-${{ env.BUILD_VERSION }}-${{ env.TARGET }}.tar.gz
          ./build/defichain-${{ env.BUILD_VERSION }}-${{ env.TARGET }}.tar.gz.SHA256

    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./build/defichain-${{ env.BUILD_VERSION }}-${{ env.TARGET }}.tar.gz
        asset_name: defichain-${{ env.BUILD_VERSION }}-${{ env.TARGET }}.tar.gz
        asset_content_type: application/gzip

    - name: Upload checksum
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./build/defichain-${{ env.BUILD_VERSION }}-${{ env.TARGET }}.tar.gz.SHA256
        asset_name: defichain-${{ env.BUILD_VERSION }}-${{ env.TARGET }}.tar.gz.SHA256
        asset_content_type: text/plain

  build-release-defi:
    needs: create-release
    runs-on: ubuntu-latest
    env:
      TARGET: x86_64-pc-linux-gnu

    steps:
    - uses: actions/checkout@v3

    - name: Populate environment
      run: ./make.sh ci-export-vars

    - name: Get artifacts
      uses: actions/download-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-${{ env.TARGET }}

    - name: Build defi image
      run: DOCKERFILE="./contrib/dockerfiles/defi.dockerfile" ./make.sh docker-build

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Push to Docker Hub
      run: |
        set -e; ver=${{ env.BUILD_VERSION }}
        docker tag defichain-${{ env.TARGET }}:${ver} defi/defichain:${ver}
        docker push defi/defichain:${ver}
