name: Build - Release

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  BUILD_VERSION: latest # Computed

jobs:
  linux:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Build and package
      run: GIT_VERSION=1 DOCKERFILE="x86_64-pc-linux-gnu-clang" TARGET="x86_64-pc-linux-gnu" ./make.sh docker-release

    - name: Publish artifacts
      uses: actions/upload-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Push to Docker Hub
      run: |
        set -e; ver=${{ env.BUILD_VERSION }}
        for tag in $(echo $ver latest); do 
          docker push defichain-x86_64-pc-linux-gnu:${ver} defi/defichain:${tag}
        done

  windows:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3

    - name: Build and package
      run: GIT_VERSION=1 TARGET="x86_64-w64-mingw32" ./make.sh docker-release

    - name: Publish artifact - x86_64-w64-mingw32
      uses: actions/upload-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.tar.gz

  macos:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3

    - name: Build and package
      run: GIT_VERSION=1 TARGET="x86_64-apple-darwin" ./make.sh docker-release

    - name: Publish artifact - x86_64-apple-darwin
      uses: actions/upload-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin.tar.gz

  create-release:
    needs:
      - linux
      - windows
      - macos
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - uses: actions/checkout@v3

    - name: Compute build version
      run: ./make.sh git-version

    - name: Cleanup work dir
      run: rm -rf *

    - name: Get artifacts
      uses: actions/download-artifact@v3

    - name: zip package for windows
      run: |
        set -e
        cd defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32
        tar xzf defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.tar.gz
        zip -r "defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.zip" defichain-${{ env.BUILD_VERSION }}/

    - name: Get Release by Tag
      id: get_release_by_tag
      uses: jonfriesen/get-release-by-tag@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.BUILD_VERSION }}

    - name: Generate SHA256 checksum
      run: |
        cd ./defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu
        sha256sum ./defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz > ./defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz.SHA256
        cd .. && cd ./defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32
        sha256sum ./defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.zip > ./defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.zip.SHA256
        cd .. && cd ./defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin
        sha256sum ./defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin.tar.gz > ././defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin.tar.gz.SHA256

    - name: Upload release asset - linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_by_tag.outputs.upload_url }}
        asset_path: ./defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu/defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz
        asset_name: defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz
        asset_content_type: application/gzip

    - name: Upload checksum - linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_by_tag.outputs.upload_url }}
        asset_path: ./defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu/defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz.SHA256
        asset_name: defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz.SHA256
        asset_content_type: text/plain

    - name: Upload release asset - windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_by_tag.outputs.upload_url }}
        asset_path: ./defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32/defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.zip
        asset_name: defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.zip
        asset_content_type: application/zip

    - name: Upload checksum asset - windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_by_tag.outputs.upload_url }}
        asset_path: ./defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32/defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.zip.SHA256
        asset_name: defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.zip.SHA256
        asset_content_type: text/plain

    - name: Upload release asset - macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_by_tag.outputs.upload_url }}
        asset_path: ./defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin/defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin.tar.gz
        asset_name: defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin.tar.gz
        asset_content_type: application/gzip

    - name: Upload checksum asset - macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_by_tag.outputs.upload_url }}
        asset_path: ./defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin/defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin.tar.gz.SHA256
        asset_name: defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin.tar.gz.SHA256
        asset_content_type: text/plain
