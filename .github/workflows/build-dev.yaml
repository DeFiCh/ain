name: Build - Dev

on:
  workflow_dispatch:
  push:
    tags:
      - "!v*"
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  BUILD_VERSION: latest # Computed
  DOCKER_HUB_USER: defi
  # Note: We do not use debug build on CI for dev as well, since debug builds 
  # take 5x the amount of space and run the GitHub CI workers out of space. 
  # make.sh still defaults to debug for local builds
  MAKE_DEBUG: 0
  GIT_VERSION: 1

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64-pc-linux-gnu, x86_64-w64-mingw32, x86_64-apple-darwin]
    env:
      TARGET: ${{matrix.target}}
      DOCKER_TARGET_STAGE: builder

    steps:
    - uses: actions/checkout@v3

    - name: Populate environment
      run: ./make.sh ci-export-vars && rm .dockerignore

    - name: Cache docker depends build
      id: docker-cache-build-deps
      uses: actions/cache@v3
      with:
        path: ./build/depends
        key: docker-${{ env.TARGET }}-${{ env.BUILD_TYPE }}-depends

    - name: Cache docker rust build
      id: docker-cache-build-rust
      uses: actions/cache@v3
      with:
        path: ./build/lib
        key: docker-${{ env.TARGET }}-${{ env.BUILD_TYPE }}-rust

    - name: Cache docker cpp build
      id: docker-cache-build-cpp
      uses: actions/cache@v3
      with:
        path: ./build/src
        key: docker-${{ env.TARGET }}-${{ env.BUILD_TYPE }}-cpp

    - name: Cache docker ccache
      id: docker-cache-ccache
      uses: actions/cache@v3
      with:
        path: ./build/.ccache
        key: docker-${{ env.TARGET }}-${{ env.BUILD_TYPE }}-cache

    - name: Build builder image
      run: ./make.sh docker-build

    - name: Build defi image
      if: ${{ env.TARGET == 'x86_64-pc-linux-gnu' }}
      run: DOCKER_TARGET_STAGE="defi" IMAGE_NAME="defi/defichain:${{ env.BUILD_VERSION }}" ./make.sh docker-build

    - name: Package
      run: ./make.sh docker-deploy && ./make.sh package

    - name: Publish artifact
      uses: actions/upload-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-${{ env.TARGET }}
        path: ./build/${{ env.PACKAGE_NAME }}

    - name: Save builds
      if: |
        ${{ steps.docker-cache-build-deps.outputs.cache-hit != 'true' }} ||
        ${{ steps.docker-cache-build-rust.outputs.cache-hit != 'true' }} ||
        ${{ steps.docker-cache-build-cpp.outputs.cache-hit != 'true' }} ||
        ${{ steps.docker-cache-ccache.outputs.cache-hit != 'true' }}
      run: ./make.sh docker-deploy-build

    - name: Login to Docker Hub
      if: ${{ env.TARGET == 'x86_64-pc-linux-gnu' }}
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Push to Docker Hub
      if: ${{ env.TARGET == 'x86_64-pc-linux-gnu' }}
      run: |
        set -e; ver=${{ env.BUILD_VERSION }}
        docker push defi/defichain:${ver}
