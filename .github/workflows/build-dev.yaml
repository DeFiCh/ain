name: Build - Dev

on:
  workflow_dispatch:
  push:
    tags:
      - "!v*"
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  BUILD_VERSION: latest # Computed
  # Note: We use debug build on CI for dev as well, since debug builds take
  # 5x the amount of space and run the GitHub CI workers out of space. make.sh
  # still defaults to debug for local builds
  MAKE_DEBUG: 0

jobs:
  linux-x64:
    runs-on: ubuntu-latest
    container: defi/ain-builder:latest
    env:
      TARGET: x86_64-pc-linux-gnu
    steps:
    - uses: actions/checkout@v3

    - name: Populate environment
      run: GIT_VERSION=1 ./make.sh ci-export-vars

    - name: Setup dependencies
      run: ./make.sh ci-setup-deps

    - name: Setup dependencies for target
      run: ./make.sh ci-setup-deps-target

    - name: Install dependencies for test
      run: ./make.sh ci-setup-deps-test

    - name: Build and package
      run: GIT_VERSION=1 ./make.sh release

    - name: Publish artifact - x86_64-pc-linux-gnu
      uses: actions/upload-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-pc-linux-gnu.tar.gz

  win-x64:
    runs-on: ubuntu-latest
    container: defi/ain-builder:latest
    env:
      TARGET: x86_64-w64-mingw32
    steps:
    - uses: actions/checkout@v3

    - name: Populate environment
      run: GIT_VERSION=1 ./make.sh ci-export-vars

    - name: Setup dependencies
      run: ./make.sh ci-setup-deps

    - name: Setup dependencies for target
      run: ./make.sh ci-setup-deps-target

    - name: Install dependencies for test
      run: ./make.sh ci-setup-deps-test
    
    - name: Build and package
      run: GIT_VERSION=1 ./make.sh release

    - name: Publish artifact - x86_64-w64-mingw32
      uses: actions/upload-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-w64-mingw32.tar.gz

  osx-x64:
    runs-on: ubuntu-latest
    container: defi/ain-builder:latest
    env:
      TARGET: x86_64-apple-darwin
    steps:
    - uses: actions/checkout@v3

    - name: Populate environment
      run: GIT_VERSION=1 ./make.sh ci-export-vars

    - name: Setup dependencies
      run: ./make.sh ci-setup-deps

    - name: Setup dependencies for target
      run: ./make.sh ci-setup-deps-target

    - name: Install dependencies for test
      run: ./make.sh ci-setup-deps-test

    - name: Build and package
      run: GIT_VERSION=1 ./make.sh release

    - name: Publish artifact - x86_64-apple-darwin
      uses: actions/upload-artifact@v3
      with:
        name: defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin
        path: ./build/defichain-${{ env.BUILD_VERSION }}-x86_64-apple-darwin.tar.gz
